# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: ubuntu

variables:
  azureServiceConnectionId: 'msdocs-python-flask-webapp-quickstart'
  webAppName: 'flask-app-nn5'
  environmentName: 'flask-ml-service'
  #Project root folder 
  projectRoot: $(System.DefaultWorkingDirectory)

stages:
  - stage: Build 
    displayName: Build stage
    jobs:
    - job: BuildJob
      pool: ubuntu
      steps: 
      - script: 
          python3.7 -m pip install -r requirements.txt
        workingDirectory: $(projectRoot)
        displayName: 'Step - Install requirements.txt'
      - task: ArchiveFiles@2
        displayName: 'Step - Archive files'
        inputs:
          rootFolderOrFile: '$(projectRoot)'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
          replaceExistingArchive: true
      
      - upload: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        displayName: 'Step - Upload package'
        artifact: drop

  - stage: Deploy
    displayName: 'Deploy Web App'     
    dependsOn: Build 
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob 
        pool: ubuntu
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: $(azureServiceConnectionId)
                    appName: $(webAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    appType: webApp